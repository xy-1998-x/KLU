该算法提供了一种针对稀疏矩阵方程的快速求解方式，具体实现步骤如下
1.将所求稀疏矩阵方程Ax=b形式的系数矩阵A和向量b存储为CSV格式的文件
2.init_matrix()函数将矩阵A、向量b的CSV格式文件进行解析并转化为适用于稀疏矩阵存储的CSC格式形式
3.klu_defaults()函数设定一系列参数，以便后续函数使用
4.klu_analyze()函数基于稀疏矩阵转化的CSC格式，并根据相关的排序算法、排序策略分析矩阵A的结构等信息
5.klu_factor()函数基于分析的矩阵结构结果进行计算缩放因子等一系列操作，并将原系数矩阵A分解为A=LU的上下三角矩阵形式
6.klu_solve()函数基于分解的矩阵结构、分解的上下三角矩阵通过向前向后迭代求解方式更新X的值并组合为最终的矩阵方程的解
7.若稀疏矩阵A结构不变，只是某些非零数值发生变化，则可通过klu_refactor()函数对分解后的LU矩阵进行更新，然后再进行klu_solve的求解

算法使用方法：
1.将klu.h、klu.c、矩阵A、向量b保存在同一目录下
2.将矩阵A保存为matrix_n.csv、向量b保存为matrix_b_n.csv的格式，其中n为矩阵A 、向量b的维数
3.通过编译命令：gcc -O2 -lm klu,c -o klu	将其编译为可执行的文件klu
4.通过执行命令：./klu -m n 运行稀疏矩阵方程Ax=b的求解，其中n为矩阵A、向量b的维数
5.通过修改repeat变量的值来设定需要重复求解次数
6.根据自己CPU主频信息来设置对应CPU_GHZ的值
7.执行结果将打印出所求解方程的解，以及在重复求解次数下，refactor重构时间以及solve求解时间的最小时间、最大时间以及平均时间，并统计时间范围频次